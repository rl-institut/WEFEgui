version: "3.7"

services:

  db:
    image: postgres:17-alpine3.19
    container_name: optimg_db
    restart: always
    env_file:
      - .envs/db.postgres
    expose:
      - 5432
    volumes:
      - db_data:/var/lib/postgresql/data/
    networks:
      - optimg_network
  app:
    build:
      context: ./app
      dockerfile: ./compose/production/app_postgres/Dockerfile
    container_name: django-optimg
    restart: always
    env_file:
      - .envs/epa.postgres
    expose:
      - 8000
    volumes:
      - static_volume:/src/cdn_static_root
    command: "gunicorn --workers=2 --bind=0.0.0.0:8000 epa.wsgi:application"
    links:
      - db
    depends_on:
      - db
    networks:
      - optimg_network
  djangoq:
    build:
      context: ./app
      dockerfile: ./compose/production/app_postgres/Dockerfile
    container_name: django-q-optimg
    restart: always
    env_file:
      - .envs/epa.postgres
    command: python manage.py qcluster
    volumes:
      - static_volume:/src/cdn_static_root
      - .:/code
    expose:
      - 8000
    depends_on:
      - db
      - app
    networks:
      - optimg_network
  nginx:
    image: nginx:1.27-alpine
    container_name: optimg_ngx
    restart: always
    ports:
      - "8080:80"
    volumes:
      - ./nginx/postgres:/etc/nginx/conf.d
      - static_volume:/static
    depends_on:
      - app
    networks:
      - optimg_network

volumes:
  db_data:
  static_volume:

networks:
  optimg_network: